import threading
from scapy.all import *


# Define the target IP address
target_ip = "192.168.1.100"

# Define the ports to scan
ports = range(1, 1024)  # Scan all ports from 1 to 1023

# Create a lock for thread-safe printing
print_lock = threading.Lock()

def scan_port(port):
    try:
        packet = IP(dst=target_ip)/TCP(dport=port, flags="S")
        response = sr1(packet, timeout=1, verbose=0)
        
        if response:
            if response.haslayer(TCP) and response.getlayer(TCP).flags == 0x12:
                with print_lock:
                    print(f"Port {port} is open")
            elif response.haslayer(ICMP) and response.getlayer(ICMP).type == 3 and response.getlayer(ICMP).code == 3:
                with print_lock:
                    print(f"Port {port} is filtered")
            else:
                with print_lock:
                    print(f"Port {port} is closed")
        else:
            with print_lock:
                print(f"Port {port} is closed")
    except Exception as e:
        with print_lock:
            print(f"Error scanning port {port}: {e}")

# Create threads for concurrent scanning
threads = []
for port in ports:
    thread = threading.Thread(target=scan_port, args=(port,))
    threads.append(thread)
    thread.start()

# Wait for all threads to finish
for thread in threads:
    thread.join()
